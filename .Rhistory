#All eigenvalues of dbRDA and then percent variance explained by each axis.
eigenvals(nutrient.db.rda.sum)
eigenvals(nutrient.db.rda.sum)/sum(eigenvals(nutrient.db.rda.sum))
# Extracting coefficients from dbRDA and adding to original df and creating new df.
dbRDA.data.sum <- cbind(nut.dat.sum, scores(nutrient.db.rda.sum, choices = c(1:3), display = "sites"))
# % var explained by each ordination axis as an object. Use these numbers in the axis labels.
dbRDA.var.sum <- eigenvals(nutrient.db.rda.sum)/sum(eigenvals(nutrient.db.rda.sum))
# Scores for nutrients and preference incase I would like to overlay those
scores.sum <- scores(nutrient.db.rda.sum, choices = c(1:3))
# species scores
sppscores.sum <- data.frame(scores.sum$species)
# Clean up and organize sppscore df
sppscores.sum$compound <- rownames(sppscores.sum)
sppscores.sum$compound <- as.factor(sppscores.sum$compound)
rownames(sppscores.sum) <- NULL
sppscores.sum <- sppscores.sum %>%
relocate(compound, .before = dbRDA1)
# Grab centroids for each tree species
tree.cent <- data.frame(scores.sum$centroids)
# tree.cent up and organize centroid df
tree.cent$Species <- rownames(tree.cent)
tree.cent$Species <- as.factor(tree.cent$Species)
rownames(tree.cent) <- NULL
tree.cent <- tree.cent %>%
relocate(Species, .before = dbRDA1)
#Rename compounds
levels(sppscores.sum$compound) <- list(CP = "C.P.perc", GAE = "GAE.mg.ml", TAE = "TAE.mg.ml", TNC = "TNC.mg.ml")
# Rename tree species
levels(tree.cent$Species) <- list(Acsa = "SpeciesAcsa", Fram = "SpeciesFram", Juvi = "SpeciesJuvi", Pist = "SpeciesPist", Qual = "SpeciesQual", Sani = "SpeciesSani", Tsca = "SpeciesTsca", Ulam = "SpeciesUlam")
# Theme that I use for ordinations
theme_PCA <- theme_classic() + # Classic theme with white background.
theme(aspect.ratio = 1, axis.title = (element_text(size = 10)), legend.title = element_text(face = "bold", size = 9), legend.text = element_text(size = 8), text = element_text(size = 10)) # Adjust plot and legend margins; bold titles.
cbPalette <- c("#386EC2", "#59710D", "#e3bb4b", "#8A1907", "#A9AEB3", "#213958", "#e99696", "white")
# Recode factor level of "avoided" to be "non-preferred" as reviewers suggested
dbRDA.data.sum <- dbRDA.data.sum %>%
mutate(Preference = fct_recode(Preference, "non-preferred" = "avoided"))
# Plot of dbRDA1 VS DBRDA2.
nut.rda.plot.sum.1.2 <- ggplot(data = dbRDA.data.sum, aes(x = dbRDA1 , y = dbRDA2)) +
theme_PCA +
geom_point(data = dbRDA.data.sum, aes(fill = Species, shape = Preference), size = 2.5, alpha =.8) +
labs(data = dbRDA.data.sum, x = "dbRDA1 (40.86%)", y = "dbRDA2 (16.57%)", color = "Species", shape = "Preference") +
ylim(min(dbRDA.data.sum$dbRDA2), max(dbRDA.data.sum$dbRDA2)) +
xlim(min(dbRDA.data.sum$dbRDA1)*1.25, max(dbRDA.data.sum$dbRDA1)*1.2) +
scale_shape_manual(values = c(21,23,24)) +
scale_fill_manual(labels = c("S. maple", "W. ash", "E. redcedar", "W. pine", "W. oak", "B. willow", "E. hemlock", "A. elm"), values = cbPalette) +
guides(size = "none", fill = guide_legend(override.aes=list(shape=21), shape = guide_legend(ncol = 2))) +
geom_segment(aes(x = 0, y = 0, xend = dbRDA1, yend = dbRDA2), data = sppscores.sum, size = 0.8, alpha = 0.75, colour = "grey30") +
geom_text(data = sppscores.sum, aes(x = dbRDA1, y = dbRDA2, label = compound, fontface = "bold"), size = 3.5)+
guides(shape = guide_legend(nrow = 2))
# Plot of dbRDA1 VS DBRDA3.
nut.rda.plot.sum.1.3 <- ggplot(data = dbRDA.data.sum, aes(x = dbRDA1 , y = dbRDA3)) +
theme_PCA +
geom_point(data = dbRDA.data.sum, aes(fill = Species, shape = Preference), size = 2.5, alpha =.8) +
labs(data = dbRDA.data.sum, x = "dbRDA1 (40.86%)", y = "dbRDA3 (11.46%)", color = "Species", shape = "Preference") +
ylim(min(dbRDA.data.sum$dbRDA3), max(dbRDA.data.sum$dbRDA3)) +
xlim(min(dbRDA.data.sum$dbRDA1)*1.25, max(dbRDA.data.sum$dbRDA1)*1.25) +
scale_shape_manual(values = c(21,23,24)) +
scale_fill_manual(labels = c("S. maple", "W. ash", "E. redcedar", "W. pine", "W. oak", "B. willow", "E. hemlock", "A. elm"), values = cbPalette) +
guides(size = "none", fill = guide_legend(override.aes=list(shape=21), shape = guide_legend(ncol = 2))) +
geom_segment(aes(x = 0, y = 0, xend = dbRDA1, yend = dbRDA3), data = sppscores.sum, size = 0.8, alpha = 0.75, colour = "grey30") +
geom_text(data = sppscores.sum, aes(x = dbRDA1, y = dbRDA3, label = compound, fontface = "bold"), size = 3.5)+
guides(shape = guide_legend(nrow = 2))
# Plot of dbRDA2 VS DBRDA3.
nut.rda.plot.sum.2.3 <- ggplot(data = dbRDA.data.sum, aes(x = dbRDA2 , y = dbRDA3)) +
theme_PCA +
geom_point(data = dbRDA.data.sum, aes(fill = Species, shape = Preference), size = 2.5, alpha =.8) +
labs(data = dbRDA.data.sum, x = "dbRDA2 (16.57%)", y = "dbRDA3 (11.46%)", color = "Species", shape = "Preference") +
ylim(min(dbRDA.data.sum$dbRDA3), max(dbRDA.data.sum$dbRDA3)) +
xlim(min(dbRDA.data.sum$dbRDA2), max(dbRDA.data.sum$dbRDA2)) +
scale_shape_manual(values = c(21,23,24)) +
scale_fill_manual(labels = c("S. maple", "W. ash", "E. redcedar", "W. pine", "W. oak", "B. willow", "E. hemlock", "A. elm"), values = cbPalette) +
guides(size = "none", fill = guide_legend(override.aes=list(shape=21), shape = guide_legend(ncol = 2))) +
geom_segment(aes(x = 0, y = 0, xend = dbRDA2, yend = dbRDA3), data = sppscores.sum, size = 0.8 , alpha = 0.75, colour = "grey30") +
geom_text(data = sppscores.sum, aes(x = dbRDA2, y = dbRDA3, label = compound, fontface = "bold"), size = 3.5)+
guides(shape = guide_legend(nrow = 2))
### WINTER DBRDA ###
nut.dat.win <- nutrient.dat %>%
filter(Season == "winter")
# Subsetting your nutrient df into nutrient and environment data.
nutrients.win = nut.dat.win[c(5:7,10)]
environments.win = nut.dat.win[,2:4]
# Distance based RDA using dbrda function (McArdle & Anderson 2001) with bray curtis dissimilarity as the distance.
nutrient.db.rda.win <- dbrda(nutrients.win ~ Species, environments.win, distance = "bray")
# Obtain p-value for model significance.
anova(nutrient.db.rda.win, by = "term")
# Obtain adjusted R-squared value. .6035
RsquareAdj(nutrient.db.rda.win)
# Obtaining output classes from dbRDA.
class(nutrient.db.rda.win)
#Having output provide spp scores
sppscores(nutrient.db.rda.win) <- sqrt(decostand(nutrients.win, "total"))
# Summary scores of dbRDA.
summary(nutrient.db.rda.win) #65.59% of the variance in this modeled ws explained by the constraining variables and 34.41% of the variance was unconstrained, meaning it cannot be explained by preference or species. Of the constrained variance, dbRDA1 explained 47.66% of total variance and dbRDA2 explained 15.26% of total variance
#All eigenvalues of dbRDA and then percent variance explained by each axis.
eigenvals(nutrient.db.rda.win)
eigenvals(nutrient.db.rda.win)/sum(eigenvals(nutrient.db.rda.win))
# Extracting coefficients from dbRDA and adding to original df and creating new df.
dbRDA.data.win <- cbind(nut.dat.win, scores(nutrient.db.rda.win, choices = c(1:3), display = "sites"))
# % var explained by each ordination axis as an object. Use these numbers in the axis labels.
dbRDA.var.win <- eigenvals(nutrient.db.rda.win)/sum(eigenvals(nutrient.db.rda.win))
# Obtaining and cleaning species scores
scores.win <- scores(nutrient.db.rda.win, choices = c(1:3))
sppscores.win <- data.frame(scores.win$species)
# Clean up and organize sppscore df
sppscores.win$compound <- rownames(sppscores.win)
sppscores.win$compound <- as.factor(sppscores.win$compound)
rownames(sppscores.win) <- NULL
sppscores.win <- sppscores.win %>%
relocate(compound, .before = dbRDA1)
#Rename compounds
levels(sppscores.win$compound) <- list(CP = "C.P.perc", GAE = "GAE.mg.ml", TAE = "TAE.mg.ml", TNC = "TNC.mg.ml")
# Rename avoided
dbRDA.data.win <- dbRDA.data.win %>%
mutate(Preference = fct_recode(Preference, "non-preferred" = "avoided"))
# winter Plot of dbRDA1 VS DBRDA2.
nut.rda.plot.win.1.2 <- ggplot(data = dbRDA.data.win, aes(x = dbRDA1 , y = dbRDA2)) +
theme_PCA +
geom_point(data = dbRDA.data.win, aes(fill = Species, shape = Preference), size = 2.5, alpha =.8) +
labs(data = dbRDA.data.win, x = "dbRDA1 (47.66%)", y = "dbRDA2 (15.26%)", color = "Species", shape = "Preference") +
ylim(min(dbRDA.data.win$dbRDA2), max(dbRDA.data.win$dbRDA2)) +
xlim(min(dbRDA.data.win$dbRDA1)*1.5, max(dbRDA.data.win$dbRDA1)*1.6) +
scale_shape_manual(values = c(21,23,24)) +
scale_fill_manual(labels = c("S. maple", "W. ash", "E. redcedar", "W. pine", "W. oak", "B. willow", "E. hemlock", "A. elm"), values = cbPalette) +
guides(size = "none", fill = guide_legend(override.aes=list(shape=21), shape = guide_legend(ncol = 2))) +
geom_segment(aes(x = 0, y = 0, xend = dbRDA1, yend = dbRDA2), data = sppscores.win, size = .8, alpha = 0.75, colour = "grey30") +
geom_text(data = sppscores.win, aes(x = dbRDA1, y = dbRDA2, label = compound, fontface = "bold"), size = 3.5)+
guides(shape = guide_legend(nrow = 2))
# Plot of dbRDA1 VS DBRDA3.
nut.rda.plot.win.1.3 <- ggplot(data = dbRDA.data.win, aes(x = dbRDA1 , y = dbRDA3)) +
theme_PCA +
geom_point(data = dbRDA.data.win, aes(fill = Species, shape = Preference), size = 2.5, alpha =.8) +
labs(data = dbRDA.data.win, x = "dbRDA1 (47.66%)", y = "dbRDA3 (2.26%)", color = "Species", shape = "Preference") +
ylim(min(dbRDA.data.win$dbRDA3), max(dbRDA.data.win$dbRDA3)) +
xlim(min(dbRDA.data.win$dbRDA1)*1.5, max(dbRDA.data.win$dbRDA1)*1.6) +
scale_shape_manual(values = c(21,23,24)) +
scale_fill_manual(labels = c("S. maple", "W. ash", "E. redcedar", "W. pine", "W. oak", "B. willow", "E. hemlock", "A. elm"), values = cbPalette) +
guides(size = "none", fill = guide_legend(override.aes=list(shape=21), shape = guide_legend(ncol = 2))) +
geom_segment(aes(x = 0, y = 0, xend = dbRDA1, yend = dbRDA3), data = sppscores.win, size =.8, alpha = 0.75, colour = "grey30") +
geom_text(data = sppscores.win, aes(x = dbRDA1, y = dbRDA3, label = compound, fontface = "bold"), size = 3.5)+
guides(shape = guide_legend(nrow = 2))
# Plot of dbRDA2 VS DBRDA3.
nut.rda.plot.win.2.3 <- ggplot(data = dbRDA.data.win, aes(x = dbRDA2 , y = dbRDA3)) +
theme_PCA +
geom_point(data = dbRDA.data.win, aes(fill = Species, shape = Preference), size = 2.5, alpha =.8) +
labs(data = dbRDA.data.win, x = "dbRDA2 (15.26%)", y = "dbRDA3 (2.26%)", color = "Species", shape = "Preference") +
ylim(min(dbRDA.data.win$dbRDA3), max(dbRDA.data.win$dbRDA3)) +
xlim(min(dbRDA.data.win$dbRDA2), max(dbRDA.data.win$dbRDA2)) +
scale_shape_manual(values = c(21,23,24)) +
scale_fill_manual(labels = c("S. maple", "W. ash", "E. redcedar", "W. pine", "W. oak", "B. willow", "E. hemlock", "A. elm"), values = cbPalette) +
guides(size = "none", fill = guide_legend(override.aes=list(shape=21), shape = guide_legend(ncol = 2))) +
geom_segment(aes(x = 0, y = 0, xend = dbRDA2, yend = dbRDA3), data = sppscores.win, size =.8, alpha = 0.75, colour = "grey30") +
geom_text(data = sppscores.win, aes(x = dbRDA2, y = dbRDA3, label = compound, fontface = "bold"), size = 3.5)+
guides(shape = guide_legend(nrow = 2))
#Extract legend
leg <- get_legend(nut.rda.plot.sum.1.2)
leg <- as_ggplot(leg)
combined.plot <- (nut.rda.plot.sum.1.2/nut.rda.plot.win.1.2/nut.rda.plot.sum.1.3/nut.rda.plot.win.1.3/nut.rda.plot.sum.2.3/nut.rda.plot.win.2.3) + plot_layout(ncol = 2) + plot_layout(guides = "collect")& theme(legend.position = "top")
combined.nutrient.plot <- combined.plot# + inset_element(leg,left = 0.0, bottom = 1.5, right = 2.5, top = 0.5, on_top = FALSE, align_to = 'full')
dev.new()
# Splitting nutrient dbrda plot into 1 figure for each season
combined.plot.summer <- (nut.rda.plot.sum.1.2/nut.rda.plot.sum.1.3/nut.rda.plot.sum.2.3) + plot_layout(ncol = 3) + plot_layout(guides = "collect")& theme(legend.position = "bottom")
combined.plot.winter <- (nut.rda.plot.win.1.2/nut.rda.plot.win.1.3/nut.rda.plot.win.2.3) + plot_layout(ncol = 3) + plot_layout(guides = "collect")& theme(legend.position = "bottom")
# Saving season plots
ggsave("C:/Users/mwuen/Documents/R/CH2_Cafe_Study/nutrients.summer.png", combined.plot.summer, height =4, width = 6.9, units = "in", dpi = 500)
ggsave("C:/Users/mwuen/Documents/R/CH2_Cafe_Study/nutrients.winter.png", combined.plot.winter, height =4, width = 6.9, units = "in", dpi = 500)
# Plot of dbRDA1 VS DBRDA2.
nut.rda.plot.sum.1.2 <- ggplot(data = dbRDA.data.sum, aes(x = dbRDA1 , y = dbRDA2)) +
theme_PCA +
geom_point(data = dbRDA.data.sum, aes(fill = Species, shape = Preference), size = 2.5, alpha =.8) +
labs(data = dbRDA.data.sum, x = "dbRDA1 (40.86%)", y = "dbRDA2 (16.57%)", color = "Species", shape = "Preference") +
ylim(min(dbRDA.data.sum$dbRDA2), max(dbRDA.data.sum$dbRDA2)) +
xlim(min(dbRDA.data.sum$dbRDA1)*1.3, max(dbRDA.data.sum$dbRDA1)*1.2) +
scale_shape_manual(values = c(21,23,24)) +
scale_fill_manual(labels = c("S. maple", "W. ash", "E. redcedar", "W. pine", "W. oak", "B. willow", "E. hemlock", "A. elm"), values = cbPalette) +
guides(size = "none", fill = guide_legend(override.aes=list(shape=21), shape = guide_legend(ncol = 2))) +
geom_segment(aes(x = 0, y = 0, xend = dbRDA1, yend = dbRDA2), data = sppscores.sum, size = 0.8, alpha = 0.75, colour = "grey30") +
geom_text(data = sppscores.sum, aes(x = dbRDA1, y = dbRDA2, label = compound, fontface = "bold"), size = 3.5)+
guides(shape = guide_legend(nrow = 2))
# Plot of dbRDA1 VS DBRDA3.
nut.rda.plot.sum.1.3 <- ggplot(data = dbRDA.data.sum, aes(x = dbRDA1 , y = dbRDA3)) +
theme_PCA +
geom_point(data = dbRDA.data.sum, aes(fill = Species, shape = Preference), size = 2.5, alpha =.8) +
labs(data = dbRDA.data.sum, x = "dbRDA1 (40.86%)", y = "dbRDA3 (11.46%)", color = "Species", shape = "Preference") +
ylim(min(dbRDA.data.sum$dbRDA3), max(dbRDA.data.sum$dbRDA3)) +
xlim(min(dbRDA.data.sum$dbRDA1)*1.3, max(dbRDA.data.sum$dbRDA1)*1.25) +
scale_shape_manual(values = c(21,23,24)) +
scale_fill_manual(labels = c("S. maple", "W. ash", "E. redcedar", "W. pine", "W. oak", "B. willow", "E. hemlock", "A. elm"), values = cbPalette) +
guides(size = "none", fill = guide_legend(override.aes=list(shape=21), shape = guide_legend(ncol = 2))) +
geom_segment(aes(x = 0, y = 0, xend = dbRDA1, yend = dbRDA3), data = sppscores.sum, size = 0.8, alpha = 0.75, colour = "grey30") +
geom_text(data = sppscores.sum, aes(x = dbRDA1, y = dbRDA3, label = compound, fontface = "bold"), size = 3.5)+
guides(shape = guide_legend(nrow = 2))
# Plot of dbRDA2 VS DBRDA3.
nut.rda.plot.sum.2.3 <- ggplot(data = dbRDA.data.sum, aes(x = dbRDA2 , y = dbRDA3)) +
theme_PCA +
geom_point(data = dbRDA.data.sum, aes(fill = Species, shape = Preference), size = 2.5, alpha =.8) +
labs(data = dbRDA.data.sum, x = "dbRDA2 (16.57%)", y = "dbRDA3 (11.46%)", color = "Species", shape = "Preference") +
ylim(min(dbRDA.data.sum$dbRDA3), max(dbRDA.data.sum$dbRDA3)) +
xlim(min(dbRDA.data.sum$dbRDA2*1.1), max(dbRDA.data.sum$dbRDA2)) +
scale_shape_manual(values = c(21,23,24)) +
scale_fill_manual(labels = c("S. maple", "W. ash", "E. redcedar", "W. pine", "W. oak", "B. willow", "E. hemlock", "A. elm"), values = cbPalette) +
guides(size = "none", fill = guide_legend(override.aes=list(shape=21), shape = guide_legend(ncol = 2))) +
geom_segment(aes(x = 0, y = 0, xend = dbRDA2, yend = dbRDA3), data = sppscores.sum, size = 0.8 , alpha = 0.75, colour = "grey30") +
geom_text(data = sppscores.sum, aes(x = dbRDA2, y = dbRDA3, label = compound, fontface = "bold"), size = 3.5)+
guides(shape = guide_legend(nrow = 2))
### WINTER DBRDA ###
nut.dat.win <- nutrient.dat %>%
filter(Season == "winter")
# Subsetting your nutrient df into nutrient and environment data.
nutrients.win = nut.dat.win[c(5:7,10)]
environments.win = nut.dat.win[,2:4]
# Distance based RDA using dbrda function (McArdle & Anderson 2001) with bray curtis dissimilarity as the distance.
nutrient.db.rda.win <- dbrda(nutrients.win ~ Species, environments.win, distance = "bray")
# Obtain p-value for model significance.
anova(nutrient.db.rda.win, by = "term")
# Obtain adjusted R-squared value. .6035
RsquareAdj(nutrient.db.rda.win)
# Obtaining output classes from dbRDA.
class(nutrient.db.rda.win)
#Having output provide spp scores
sppscores(nutrient.db.rda.win) <- sqrt(decostand(nutrients.win, "total"))
# Summary scores of dbRDA.
summary(nutrient.db.rda.win) #65.59% of the variance in this modeled ws explained by the constraining variables and 34.41% of the variance was unconstrained, meaning it cannot be explained by preference or species. Of the constrained variance, dbRDA1 explained 47.66% of total variance and dbRDA2 explained 15.26% of total variance
#All eigenvalues of dbRDA and then percent variance explained by each axis.
eigenvals(nutrient.db.rda.win)
eigenvals(nutrient.db.rda.win)/sum(eigenvals(nutrient.db.rda.win))
# Extracting coefficients from dbRDA and adding to original df and creating new df.
dbRDA.data.win <- cbind(nut.dat.win, scores(nutrient.db.rda.win, choices = c(1:3), display = "sites"))
# % var explained by each ordination axis as an object. Use these numbers in the axis labels.
dbRDA.var.win <- eigenvals(nutrient.db.rda.win)/sum(eigenvals(nutrient.db.rda.win))
# Obtaining and cleaning species scores
scores.win <- scores(nutrient.db.rda.win, choices = c(1:3))
sppscores.win <- data.frame(scores.win$species)
# Clean up and organize sppscore df
sppscores.win$compound <- rownames(sppscores.win)
sppscores.win$compound <- as.factor(sppscores.win$compound)
rownames(sppscores.win) <- NULL
sppscores.win <- sppscores.win %>%
relocate(compound, .before = dbRDA1)
#Rename compounds
levels(sppscores.win$compound) <- list(CP = "C.P.perc", GAE = "GAE.mg.ml", TAE = "TAE.mg.ml", TNC = "TNC.mg.ml")
# Rename avoided
dbRDA.data.win <- dbRDA.data.win %>%
mutate(Preference = fct_recode(Preference, "non-preferred" = "avoided"))
# winter Plot of dbRDA1 VS DBRDA2.
nut.rda.plot.win.1.2 <- ggplot(data = dbRDA.data.win, aes(x = dbRDA1 , y = dbRDA2)) +
theme_PCA +
geom_point(data = dbRDA.data.win, aes(fill = Species, shape = Preference), size = 2.5, alpha =.8) +
labs(data = dbRDA.data.win, x = "dbRDA1 (47.66%)", y = "dbRDA2 (15.26%)", color = "Species", shape = "Preference") +
ylim(min(dbRDA.data.win$dbRDA2), max(dbRDA.data.win$dbRDA2)) +
xlim(min(dbRDA.data.win$dbRDA1)*1.6, max(dbRDA.data.win$dbRDA1)*1.6) +
scale_shape_manual(values = c(21,23,24)) +
scale_fill_manual(labels = c("S. maple", "W. ash", "E. redcedar", "W. pine", "W. oak", "B. willow", "E. hemlock", "A. elm"), values = cbPalette) +
guides(size = "none", fill = guide_legend(override.aes=list(shape=21), shape = guide_legend(ncol = 2))) +
geom_segment(aes(x = 0, y = 0, xend = dbRDA1, yend = dbRDA2), data = sppscores.win, size = .8, alpha = 0.75, colour = "grey30") +
geom_text(data = sppscores.win, aes(x = dbRDA1, y = dbRDA2, label = compound, fontface = "bold"), size = 3.5)+
guides(shape = guide_legend(nrow = 2))
# Plot of dbRDA1 VS DBRDA3.
nut.rda.plot.win.1.3 <- ggplot(data = dbRDA.data.win, aes(x = dbRDA1 , y = dbRDA3)) +
theme_PCA +
geom_point(data = dbRDA.data.win, aes(fill = Species, shape = Preference), size = 2.5, alpha =.8) +
labs(data = dbRDA.data.win, x = "dbRDA1 (47.66%)", y = "dbRDA3 (2.26%)", color = "Species", shape = "Preference") +
ylim(min(dbRDA.data.win$dbRDA3), max(dbRDA.data.win$dbRDA3)) +
xlim(min(dbRDA.data.win$dbRDA1)*1.6, max(dbRDA.data.win$dbRDA1)*1.6) +
scale_shape_manual(values = c(21,23,24)) +
scale_fill_manual(labels = c("S. maple", "W. ash", "E. redcedar", "W. pine", "W. oak", "B. willow", "E. hemlock", "A. elm"), values = cbPalette) +
guides(size = "none", fill = guide_legend(override.aes=list(shape=21), shape = guide_legend(ncol = 2))) +
geom_segment(aes(x = 0, y = 0, xend = dbRDA1, yend = dbRDA3), data = sppscores.win, size =.8, alpha = 0.75, colour = "grey30") +
geom_text(data = sppscores.win, aes(x = dbRDA1, y = dbRDA3, label = compound, fontface = "bold"), size = 3.5)+
guides(shape = guide_legend(nrow = 2))
# Plot of dbRDA2 VS DBRDA3.
nut.rda.plot.win.2.3 <- ggplot(data = dbRDA.data.win, aes(x = dbRDA2 , y = dbRDA3)) +
theme_PCA +
geom_point(data = dbRDA.data.win, aes(fill = Species, shape = Preference), size = 2.5, alpha =.8) +
labs(data = dbRDA.data.win, x = "dbRDA2 (15.26%)", y = "dbRDA3 (2.26%)", color = "Species", shape = "Preference") +
ylim(min(dbRDA.data.win$dbRDA3), max(dbRDA.data.win$dbRDA3)) +
xlim(min(dbRDA.data.win$dbRDA2), max(dbRDA.data.win$dbRDA2)) +
scale_shape_manual(values = c(21,23,24)) +
scale_fill_manual(labels = c("S. maple", "W. ash", "E. redcedar", "W. pine", "W. oak", "B. willow", "E. hemlock", "A. elm"), values = cbPalette) +
guides(size = "none", fill = guide_legend(override.aes=list(shape=21), shape = guide_legend(ncol = 2))) +
geom_segment(aes(x = 0, y = 0, xend = dbRDA2, yend = dbRDA3), data = sppscores.win, size =.8, alpha = 0.75, colour = "grey30") +
geom_text(data = sppscores.win, aes(x = dbRDA2, y = dbRDA3, label = compound, fontface = "bold"), size = 3.5)+
guides(shape = guide_legend(nrow = 2))
#Extract legend
leg <- get_legend(nut.rda.plot.sum.1.2)
leg <- as_ggplot(leg)
combined.plot <- (nut.rda.plot.sum.1.2/nut.rda.plot.win.1.2/nut.rda.plot.sum.1.3/nut.rda.plot.win.1.3/nut.rda.plot.sum.2.3/nut.rda.plot.win.2.3) + plot_layout(ncol = 2) + plot_layout(guides = "collect")& theme(legend.position = "top")
combined.nutrient.plot <- combined.plot# + inset_element(leg,left = 0.0, bottom = 1.5, right = 2.5, top = 0.5, on_top = FALSE, align_to = 'full')
dev.new()
# Splitting nutrient dbrda plot into 1 figure for each season
combined.plot.summer <- (nut.rda.plot.sum.1.2/nut.rda.plot.sum.1.3/nut.rda.plot.sum.2.3) + plot_layout(ncol = 3) + plot_layout(guides = "collect")& theme(legend.position = "bottom")
combined.plot.winter <- (nut.rda.plot.win.1.2/nut.rda.plot.win.1.3/nut.rda.plot.win.2.3) + plot_layout(ncol = 3) + plot_layout(guides = "collect")& theme(legend.position = "bottom")
# Saving season plots
ggsave("C:/Users/mwuen/Documents/R/CH2_Cafe_Study/nutrients.summer.png", combined.plot.summer, height =4, width = 6.9, units = "in", dpi = 500)
ggsave("C:/Users/mwuen/Documents/R/CH2_Cafe_Study/nutrients.winter.png", combined.plot.winter, height =4, width = 6.9, units = "in", dpi = 500)
nutrient.dat <- read.csv("C:/Users/mwuen/Documents/R/CH2_Cafe_Study/Full.chemical.2.csv")
#View(nutrient.dat)
nutrient.dat$Species <- as.factor(nutrient.dat$Species)
nutrient.dat$Season <- as.factor(nutrient.dat$Season)
nutrient.dat$C.P.perc <- (nutrient.dat$C.P.perc/100)
nutrient.dat$Preference <- as.factor(nutrient.dat$Preference)
# Replace tannin values of 0 half of minimum detection limit (.000820560/2)
nutrient.dat["TAE.mg.ml"][nutrient.dat["TAE.mg.ml"] == 0] <- 0.00041028
#View(nutrient.dat)
nutrient.dat$TAE.mg.ml <- (nutrient.dat$TAE.mg.ml*4)
### SUMMER DBRDA ###
nut.dat.sum <- nutrient.dat %>%
filter(Season == "summer")
# Subsetting your nutrient df into nutrient and environment data.
nutrients.sum = nut.dat.sum[c(5:7,10)]
environments.sum = nut.dat.sum[,2:4]
# Distance based RDA using dbrda function (McArdle & Anderson 2001) with bray curtis dissimilarity as the distance. ### Maybe do condition species, maybe not? this is odd, Maybe fully drop dbRDA for RDA. Coinertia analysis. see mason et al 2020.
nutrient.db.rda.sum <- dbrda(nutrients.sum ~ Species, environments.sum, distance = "bray")
# Obtain p-value for model significance.
anova(nutrient.db.rda.sum, by = "term")
# Obtain adjusted R-squared value. 0.6452
RsquareAdj(nutrient.db.rda.sum)
# Obtaining output classes from dbRDA.
class(nutrient.db.rda.sum)
#Having output provide spp scores
sppscores(nutrient.db.rda.sum) <- sqrt(decostand(nutrients.sum, "total"))
# Summary scores of dbRDA.
summary(nutrient.db.rda.sum) #69.12% of the variance in this modeled ws explained by the constraining variables and 30.88% of the variance was unconstrained, meaning it cannot be explained by preference or species. Of the constrained variance, dbRDA1 explained 40.86% of total variance and dbRDA2 explained 18.69% of total variance
#All eigenvalues of dbRDA and then percent variance explained by each axis.
eigenvals(nutrient.db.rda.sum)
eigenvals(nutrient.db.rda.sum)/sum(eigenvals(nutrient.db.rda.sum))
# Extracting coefficients from dbRDA and adding to original df and creating new df.
dbRDA.data.sum <- cbind(nut.dat.sum, scores(nutrient.db.rda.sum, choices = c(1:3), display = "sites"))
# % var explained by each ordination axis as an object. Use these numbers in the axis labels.
dbRDA.var.sum <- eigenvals(nutrient.db.rda.sum)/sum(eigenvals(nutrient.db.rda.sum))
# Scores for nutrients and preference incase I would like to overlay those
scores.sum <- scores(nutrient.db.rda.sum, choices = c(1:3))
# species scores
sppscores.sum <- data.frame(scores.sum$species)
# Clean up and organize sppscore df
sppscores.sum$compound <- rownames(sppscores.sum)
sppscores.sum$compound <- as.factor(sppscores.sum$compound)
rownames(sppscores.sum) <- NULL
sppscores.sum <- sppscores.sum %>%
relocate(compound, .before = dbRDA1)
# Grab centroids for each tree species
tree.cent <- data.frame(scores.sum$centroids)
# tree.cent up and organize centroid df
tree.cent$Species <- rownames(tree.cent)
tree.cent$Species <- as.factor(tree.cent$Species)
rownames(tree.cent) <- NULL
tree.cent <- tree.cent %>%
relocate(Species, .before = dbRDA1)
#Rename compounds
levels(sppscores.sum$compound) <- list(CP = "C.P.perc", GAE = "GAE.mg.ml", TAE = "TAE.mg.ml", TNC = "TNC.mg.ml")
# Rename tree species
levels(tree.cent$Species) <- list(Acsa = "SpeciesAcsa", Fram = "SpeciesFram", Juvi = "SpeciesJuvi", Pist = "SpeciesPist", Qual = "SpeciesQual", Sani = "SpeciesSani", Tsca = "SpeciesTsca", Ulam = "SpeciesUlam")
# Theme that I use for ordinations
theme_PCA <- theme_classic() + # Classic theme with white background.
theme(aspect.ratio = 1, axis.title = (element_text(size = 10)), legend.title = element_text(face = "bold", size = 9), legend.text = element_text(size = 8), text = element_text(size = 10)) # Adjust plot and legend margins; bold titles.
cbPalette <- c("#386EC2", "#59710D", "#e3bb4b", "#8A1907", "#A9AEB3", "#213958", "#e99696", "white")
# Recode factor level of "avoided" to be "non-preferred" as reviewers suggested
dbRDA.data.sum <- dbRDA.data.sum %>%
mutate(Preference = fct_recode(Preference, "non-preferred" = "avoided"))
# Plot of dbRDA1 VS DBRDA2.
nut.rda.plot.sum.1.2 <- ggplot(data = dbRDA.data.sum, aes(x = dbRDA1 , y = dbRDA2)) +
theme_PCA +
geom_point(data = dbRDA.data.sum, aes(fill = Species, shape = Preference), size = 2.5, alpha =.8) +
labs(data = dbRDA.data.sum, x = "dbRDA1 (40.86%)", y = "dbRDA2 (16.57%)", color = "Species", shape = "Preference") +
ylim(min(dbRDA.data.sum$dbRDA2), max(dbRDA.data.sum$dbRDA2)) +
xlim(min(dbRDA.data.sum$dbRDA1)*1.35, max(dbRDA.data.sum$dbRDA1)*1.25) +
scale_shape_manual(values = c(21,23,24)) +
scale_fill_manual(labels = c("S. maple", "W. ash", "E. redcedar", "W. pine", "W. oak", "B. willow", "E. hemlock", "A. elm"), values = cbPalette) +
guides(size = "none", fill = guide_legend(override.aes=list(shape=21), shape = guide_legend(ncol = 2))) +
geom_segment(aes(x = 0, y = 0, xend = dbRDA1, yend = dbRDA2), data = sppscores.sum, size = 0.8, alpha = 0.75, colour = "grey30") +
geom_text(data = sppscores.sum, aes(x = dbRDA1, y = dbRDA2, label = compound, fontface = "bold"), size = 3.5)+
guides(shape = guide_legend(nrow = 2))
# Plot of dbRDA1 VS DBRDA3.
nut.rda.plot.sum.1.3 <- ggplot(data = dbRDA.data.sum, aes(x = dbRDA1 , y = dbRDA3)) +
theme_PCA +
geom_point(data = dbRDA.data.sum, aes(fill = Species, shape = Preference), size = 2.5, alpha =.8) +
labs(data = dbRDA.data.sum, x = "dbRDA1 (40.86%)", y = "dbRDA3 (11.46%)", color = "Species", shape = "Preference") +
ylim(min(dbRDA.data.sum$dbRDA3), max(dbRDA.data.sum$dbRDA3)) +
xlim(min(dbRDA.data.sum$dbRDA1)*1.35, max(dbRDA.data.sum$dbRDA1)*1.25) +
scale_shape_manual(values = c(21,23,24)) +
scale_fill_manual(labels = c("S. maple", "W. ash", "E. redcedar", "W. pine", "W. oak", "B. willow", "E. hemlock", "A. elm"), values = cbPalette) +
guides(size = "none", fill = guide_legend(override.aes=list(shape=21), shape = guide_legend(ncol = 2))) +
geom_segment(aes(x = 0, y = 0, xend = dbRDA1, yend = dbRDA3), data = sppscores.sum, size = 0.8, alpha = 0.75, colour = "grey30") +
geom_text(data = sppscores.sum, aes(x = dbRDA1, y = dbRDA3, label = compound, fontface = "bold"), size = 3.5)+
guides(shape = guide_legend(nrow = 2))
# Plot of dbRDA2 VS DBRDA3.
nut.rda.plot.sum.2.3 <- ggplot(data = dbRDA.data.sum, aes(x = dbRDA2 , y = dbRDA3)) +
theme_PCA +
geom_point(data = dbRDA.data.sum, aes(fill = Species, shape = Preference), size = 2.5, alpha =.8) +
labs(data = dbRDA.data.sum, x = "dbRDA2 (16.57%)", y = "dbRDA3 (11.46%)", color = "Species", shape = "Preference") +
ylim(min(dbRDA.data.sum$dbRDA3), max(dbRDA.data.sum$dbRDA3)) +
xlim(min(dbRDA.data.sum$dbRDA2), max(dbRDA.data.sum$dbRDA2*1.1)) +
scale_shape_manual(values = c(21,23,24)) +
scale_fill_manual(labels = c("S. maple", "W. ash", "E. redcedar", "W. pine", "W. oak", "B. willow", "E. hemlock", "A. elm"), values = cbPalette) +
guides(size = "none", fill = guide_legend(override.aes=list(shape=21), shape = guide_legend(ncol = 2))) +
geom_segment(aes(x = 0, y = 0, xend = dbRDA2, yend = dbRDA3), data = sppscores.sum, size = 0.8 , alpha = 0.75, colour = "grey30") +
geom_text(data = sppscores.sum, aes(x = dbRDA2, y = dbRDA3, label = compound, fontface = "bold"), size = 3.5)+
guides(shape = guide_legend(nrow = 2))
### WINTER DBRDA ###
nut.dat.win <- nutrient.dat %>%
filter(Season == "winter")
# Subsetting your nutrient df into nutrient and environment data.
nutrients.win = nut.dat.win[c(5:7,10)]
environments.win = nut.dat.win[,2:4]
# Distance based RDA using dbrda function (McArdle & Anderson 2001) with bray curtis dissimilarity as the distance.
nutrient.db.rda.win <- dbrda(nutrients.win ~ Species, environments.win, distance = "bray")
# Obtain p-value for model significance.
anova(nutrient.db.rda.win, by = "term")
# Obtain adjusted R-squared value. .6035
RsquareAdj(nutrient.db.rda.win)
# Obtaining output classes from dbRDA.
class(nutrient.db.rda.win)
#Having output provide spp scores
sppscores(nutrient.db.rda.win) <- sqrt(decostand(nutrients.win, "total"))
# Summary scores of dbRDA.
summary(nutrient.db.rda.win) #65.59% of the variance in this modeled ws explained by the constraining variables and 34.41% of the variance was unconstrained, meaning it cannot be explained by preference or species. Of the constrained variance, dbRDA1 explained 47.66% of total variance and dbRDA2 explained 15.26% of total variance
#All eigenvalues of dbRDA and then percent variance explained by each axis.
eigenvals(nutrient.db.rda.win)
eigenvals(nutrient.db.rda.win)/sum(eigenvals(nutrient.db.rda.win))
# Extracting coefficients from dbRDA and adding to original df and creating new df.
dbRDA.data.win <- cbind(nut.dat.win, scores(nutrient.db.rda.win, choices = c(1:3), display = "sites"))
# % var explained by each ordination axis as an object. Use these numbers in the axis labels.
dbRDA.var.win <- eigenvals(nutrient.db.rda.win)/sum(eigenvals(nutrient.db.rda.win))
# Obtaining and cleaning species scores
scores.win <- scores(nutrient.db.rda.win, choices = c(1:3))
sppscores.win <- data.frame(scores.win$species)
# Clean up and organize sppscore df
sppscores.win$compound <- rownames(sppscores.win)
sppscores.win$compound <- as.factor(sppscores.win$compound)
rownames(sppscores.win) <- NULL
sppscores.win <- sppscores.win %>%
relocate(compound, .before = dbRDA1)
#Rename compounds
levels(sppscores.win$compound) <- list(CP = "C.P.perc", GAE = "GAE.mg.ml", TAE = "TAE.mg.ml", TNC = "TNC.mg.ml")
# Rename avoided
dbRDA.data.win <- dbRDA.data.win %>%
mutate(Preference = fct_recode(Preference, "non-preferred" = "avoided"))
# winter Plot of dbRDA1 VS DBRDA2.
nut.rda.plot.win.1.2 <- ggplot(data = dbRDA.data.win, aes(x = dbRDA1 , y = dbRDA2)) +
theme_PCA +
geom_point(data = dbRDA.data.win, aes(fill = Species, shape = Preference), size = 2.5, alpha =.8) +
labs(data = dbRDA.data.win, x = "dbRDA1 (47.66%)", y = "dbRDA2 (15.26%)", color = "Species", shape = "Preference") +
ylim(min(dbRDA.data.win$dbRDA2), max(dbRDA.data.win$dbRDA2)) +
xlim(min(dbRDA.data.win$dbRDA1)*1.6, max(dbRDA.data.win$dbRDA1)*1.65) +
scale_shape_manual(values = c(21,23,24)) +
scale_fill_manual(labels = c("S. maple", "W. ash", "E. redcedar", "W. pine", "W. oak", "B. willow", "E. hemlock", "A. elm"), values = cbPalette) +
guides(size = "none", fill = guide_legend(override.aes=list(shape=21), shape = guide_legend(ncol = 2))) +
geom_segment(aes(x = 0, y = 0, xend = dbRDA1, yend = dbRDA2), data = sppscores.win, size = .8, alpha = 0.75, colour = "grey30") +
geom_text(data = sppscores.win, aes(x = dbRDA1, y = dbRDA2, label = compound, fontface = "bold"), size = 3.5)+
guides(shape = guide_legend(nrow = 2))
# Plot of dbRDA1 VS DBRDA3.
nut.rda.plot.win.1.3 <- ggplot(data = dbRDA.data.win, aes(x = dbRDA1 , y = dbRDA3)) +
theme_PCA +
geom_point(data = dbRDA.data.win, aes(fill = Species, shape = Preference), size = 2.5, alpha =.8) +
labs(data = dbRDA.data.win, x = "dbRDA1 (47.66%)", y = "dbRDA3 (2.26%)", color = "Species", shape = "Preference") +
ylim(min(dbRDA.data.win$dbRDA3), max(dbRDA.data.win$dbRDA3)) +
xlim(min(dbRDA.data.win$dbRDA1)*1.6, max(dbRDA.data.win$dbRDA1)*1.65) +
scale_shape_manual(values = c(21,23,24)) +
scale_fill_manual(labels = c("S. maple", "W. ash", "E. redcedar", "W. pine", "W. oak", "B. willow", "E. hemlock", "A. elm"), values = cbPalette) +
guides(size = "none", fill = guide_legend(override.aes=list(shape=21), shape = guide_legend(ncol = 2))) +
geom_segment(aes(x = 0, y = 0, xend = dbRDA1, yend = dbRDA3), data = sppscores.win, size =.8, alpha = 0.75, colour = "grey30") +
geom_text(data = sppscores.win, aes(x = dbRDA1, y = dbRDA3, label = compound, fontface = "bold"), size = 3.5)+
guides(shape = guide_legend(nrow = 2))
# Plot of dbRDA2 VS DBRDA3.
nut.rda.plot.win.2.3 <- ggplot(data = dbRDA.data.win, aes(x = dbRDA2 , y = dbRDA3)) +
theme_PCA +
geom_point(data = dbRDA.data.win, aes(fill = Species, shape = Preference), size = 2.5, alpha =.8) +
labs(data = dbRDA.data.win, x = "dbRDA2 (15.26%)", y = "dbRDA3 (2.26%)", color = "Species", shape = "Preference") +
ylim(min(dbRDA.data.win$dbRDA3), max(dbRDA.data.win$dbRDA3)) +
xlim(min(dbRDA.data.win$dbRDA2), max(dbRDA.data.win$dbRDA2)) +
scale_shape_manual(values = c(21,23,24)) +
scale_fill_manual(labels = c("S. maple", "W. ash", "E. redcedar", "W. pine", "W. oak", "B. willow", "E. hemlock", "A. elm"), values = cbPalette) +
guides(size = "none", fill = guide_legend(override.aes=list(shape=21), shape = guide_legend(ncol = 2))) +
geom_segment(aes(x = 0, y = 0, xend = dbRDA2, yend = dbRDA3), data = sppscores.win, size =.8, alpha = 0.75, colour = "grey30") +
geom_text(data = sppscores.win, aes(x = dbRDA2, y = dbRDA3, label = compound, fontface = "bold"), size = 3.5)+
guides(shape = guide_legend(nrow = 2))
#Extract legend
leg <- get_legend(nut.rda.plot.sum.1.2)
leg <- as_ggplot(leg)
combined.plot <- (nut.rda.plot.sum.1.2/nut.rda.plot.win.1.2/nut.rda.plot.sum.1.3/nut.rda.plot.win.1.3/nut.rda.plot.sum.2.3/nut.rda.plot.win.2.3) + plot_layout(ncol = 2) + plot_layout(guides = "collect")& theme(legend.position = "top")
combined.nutrient.plot <- combined.plot# + inset_element(leg,left = 0.0, bottom = 1.5, right = 2.5, top = 0.5, on_top = FALSE, align_to = 'full')
dev.new()
combined.nutrient.plot
# Splitting nutrient dbrda plot into 1 figure for each season
combined.plot.summer <- (nut.rda.plot.sum.1.2/nut.rda.plot.sum.1.3/nut.rda.plot.sum.2.3) + plot_layout(ncol = 3) + plot_layout(guides = "collect")& theme(legend.position = "bottom")
combined.plot.winter <- (nut.rda.plot.win.1.2/nut.rda.plot.win.1.3/nut.rda.plot.win.2.3) + plot_layout(ncol = 3) + plot_layout(guides = "collect")& theme(legend.position = "bottom")
# Saving season plots
ggsave("C:/Users/mwuen/Documents/R/CH2_Cafe_Study/nutrients.summer.png", combined.plot.summer, height =4, width = 6.9, units = "in", dpi = 500)
ggsave("C:/Users/mwuen/Documents/R/CH2_Cafe_Study/nutrients.winter.png", combined.plot.winter, height =4, width = 6.9, units = "in", dpi = 500)
ggsave("C:/Users/mwuen/Documents/R/CH2_Cafe_Study/nutrients.winter.png", combined.plot.winter, height =4, width = 7.2, units = "in", dpi = 500)
ggsave("C:/Users/mwuen/Documents/R/CH2_Cafe_Study/nutrients.winter.png", combined.plot.winter, height =4, width = 7.3, units = "in", dpi = 500)
ggsave("C:/Users/mwuen/Documents/R/CH2_Cafe_Study/nutrients.winter.png", combined.plot.winter, height =4, width = 7.35, units = "in", dpi = 500)
# Saving season plots
ggsave("C:/Users/mwuen/Documents/R/CH2_Cafe_Study/nutrients.summer.png", combined.plot.summer, height =4, width = 7.35, units = "in", dpi = 500)
voc.dat <- read.csv("C:/Users/mwuen/Documents/R/CH2_Cafe_Study/VOC.full.sheet.csv")
forage.dat <- read.csv("C:/Users/mwuen/Documents/R/CH2_Cafe_Study/WTD.forage.csv")
nutrient.dat <- read.csv("C:/Users/mwuen/Documents/R/CH2_Cafe_Study/Full.chemical.2.csv")
### nbinom mods and figures ###
forage.dat.test <- read.csv("C:/Users/mwuen/Documents/R/CH2_Cafe_Study/WTD.forage.csv")
nutrient.dat <- read.csv("C:/Users/mwuen/Documents/R/CH2_Cafe_Study/Full.chemical.2.csv")
nutrient.dat.2 <- read.csv("C:/Users/mwuen/Documents/R/CH2_Cafe_Study/updated.nutrients.csv")
#### Calculating acceptability ratios ####
forage.dat.test <- read.csv("C:/Users/mwuen/Documents/R/CH2_Cafe_Study/WTD.forage.csv")
nutrient.dat <- read.csv("C:/Users/mwuen/Documents/R/CH2_Cafe_Study/Full.chemical.2.csv")
nutrient.dat.2 <- read.csv("C:/Users/mwuen/Documents/R/CH2_Cafe_Study/updated.nutrients.csv")
voc.dat <- read.csv("C:/Users/mwuen/Documents/R/CH2_Cafe_Study/VOC.full.sheet.csv")
library(plotrix)
### These analyses won't be included in manuscript but could be supplementary if reviewers ask for it.
# direct test of sniffing time in relation to species. So lm(sniffing time ~ species +(1|Deerid))
# add in an offset term
pref.df <- data.frame(treesp = c("AELM","BWIL","EHEM","ERCD","SMAP","WASH","WOAK","WPIN"),
pref.cat = c("preferred", "preferred", "avoided", "avoided","avoided","neutral","neutral","avoided"))
fn.df.sum2 <- merge(fn.df.sum, pref.df, by = c("treesp"))
